{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wngml\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\react-study\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// eslint-disable : lint 끄는 기능\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // state를 나중에 쓰고 싶다면 자료를 뽑는 문법을 적는다.\n  // let [a,b] -> destructuring문법\n  // 변수 vs state : 변수는 갑자기 변경되면 html에 자동으로 반영이 안됨, state는 자동 재렌더링됨\n  // array/object 다룰 때 원본은 보존하는 게 좋음\n  let [title, setTitle] = useState([\"남자코트추천\", \"강남 우동맛집\", \"파이썬독학\"]);\n  let [good, setGood] = useState(0);\n  let [modal, setModal] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copy = [...title];\n        copy.sort();\n        setTitle(copy);\n      },\n      children: [\" \", \"\\uC815\\uB82C\\uBC84\\uD2BC\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // state변경함수 특징 : 기존state == 신규 state의 경우 변경안해줌\n        // array/object 특징 : let arr= [1,2,3] array/object 담은 변수엔 화살표만 저장됨\n        // [...]=> spread operator 라고하는 문법인데\n        //array나 object 자료형 왼쪽에 붙일 수 있으며\n        //뜻은 별거없고 괄호를 벗겨주세요~ 라는 뜻입니다.\n        let copy = [...title];\n        copy[0] = \"여자코트추천\";\n        setTitle(copy);\n      },\n      children: \"\\uAE00\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [title[0], /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setGood(good + 1);\n          },\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          setModal(!modal);\n        },\n        children: title[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), [1, 2, 3].map(function () {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          onClick: () => {\n            setModal(!modal);\n          },\n          children: title[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this);\n    }), modal == true ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n// 컴포넌트 만드는 방법 1\n_s(App, \"prZfFzT38HA+RLt8ptXHzcHnvAo=\");\n_c = App;\nfunction Modal() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n// 컴포넌트 만드는 방법 2\n//let Modal = ()=>{}\n_c2 = Modal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["useState","App","title","setTitle","good","setGood","modal","setModal","copy","sort","map","Modal"],"sources":["C:/Users/wngml/OneDrive/바탕 화면/react/react-study/src/App.js"],"sourcesContent":["// eslint-disable : lint 끄는 기능\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // state를 나중에 쓰고 싶다면 자료를 뽑는 문법을 적는다.\n  // let [a,b] -> destructuring문법\n  // 변수 vs state : 변수는 갑자기 변경되면 html에 자동으로 반영이 안됨, state는 자동 재렌더링됨\n  // array/object 다룰 때 원본은 보존하는 게 좋음\n  let [title, setTitle] = useState([\n    \"남자코트추천\",\n    \"강남 우동맛집\",\n    \"파이썬독학\",\n  ]);\n  let [good, setGood] = useState(0);\n  let [modal, setModal] = useState(0);\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <h4>logo</h4>\n      </div>\n      <button\n        onClick={() => {\n          let copy = [...title];\n          copy.sort();\n          setTitle(copy);\n        }}\n      >\n        {\" \"}\n        정렬버튼{\" \"}\n      </button>\n      <button\n        onClick={() => {\n          // state변경함수 특징 : 기존state == 신규 state의 경우 변경안해줌\n          // array/object 특징 : let arr= [1,2,3] array/object 담은 변수엔 화살표만 저장됨\n          // [...]=> spread operator 라고하는 문법인데\n          //array나 object 자료형 왼쪽에 붙일 수 있으며\n          //뜻은 별거없고 괄호를 벗겨주세요~ 라는 뜻입니다.\n          let copy = [...title];\n          copy[0] = \"여자코트추천\";\n          setTitle(copy);\n        }}\n      >\n        글수정\n      </button>\n      <div className=\"list\">\n        <h4>\n          {title[0]}\n          {/* onClick={함수명만, 함수 만드는 문법 전체를 바로 넣어도 됨} \n          state 변경 시에는 등호로 변경하면 안된다 ex)  good=good+1\n         바꾸는 방법 :  state변경함수(새로운 state) ex) setGood(1)\n          */}\n          <span\n            onClick={() => {\n              setGood(good + 1);\n            }}\n          >\n            👍\n          </span>{\" \"}\n          {good}\n        </h4>\n\n        <p>2월 17일 발행</p>\n      </div>\n\n      <div className=\"list\">\n        <h4>{title[1]}</h4>\n        <p>2월 17일 발행</p>\n      </div>\n      <div className=\"list\">\n        <h4\n          onClick={() => {\n            setModal(!modal);\n          }}\n        >\n          {title[2]}\n        </h4>\n        <p>2월 17일 발행</p>\n      </div>\n\n      {[1, 2, 3].map(function () {\n        return (\n          <div className=\"list\">\n            <h4\n              onClick={() => {\n                setModal(!modal);\n              }}\n            >\n              {title[2]}\n            </h4>\n            <p>2월 17일 발행</p>\n          </div>\n        );\n      })}\n\n      {/* if문 대신 삼항연산자 사용 */}\n      {/* {조건식 ? 참일 때 실행할 코드 : 거짓일 때 실행할 코드} */}\n      {/* 내가 쓴 풀이식 -> \n       <h4\n          onClick={() => {\n            setModal(modal + 1);\n          }}\n        >\n\n      {modal % 2 == 1 ? <Modal /> : null} */}\n      {/* 애플 코딩 정답 */}\n      {modal == true ? <Modal></Modal> : null}\n    </div>\n  );\n}\n\n// 컴포넌트 만드는 방법 1\nfunction Modal() {\n  return (\n    <div className=\"modal\">\n      <h4>제목</h4>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  );\n}\n// 컴포넌트 만드는 방법 2\n//let Modal = ()=>{}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}